// <auto-generated />
using System;
using Dyno.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dyno.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dyno.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("WebSet");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Dyno.Models.Connection", b =>
                {
                    b.Property<int>("ConnectionId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FriendaId");

                    b.Property<int>("FriendbId");

                    b.HasKey("ConnectionId");

                    b.HasIndex("FriendaId");

                    b.HasIndex("FriendbId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("Dyno.Models.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TopicId");

                    b.Property<int>("UserId");

                    b.HasKey("InterestId");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("Dyno.Models.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("TopicIMG");

                    b.Property<string>("TopicLink");

                    b.Property<string>("TopicName")
                        .IsRequired();

                    b.Property<string>("TopicTitle");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("TopicId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Dyno.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Admin");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Dyno.Models.Connection", b =>
                {
                    b.HasOne("Dyno.Models.User", "Frienda")
                        .WithMany("Friendbs")
                        .HasForeignKey("FriendaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dyno.Models.User", "Friendb")
                        .WithMany("Friendas")
                        .HasForeignKey("FriendbId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Dyno.Models.Interest", b =>
                {
                    b.HasOne("Dyno.Models.Topic", "Topic")
                        .WithMany("Interests")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dyno.Models.User", "User")
                        .WithMany("Interests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
